#!/usr/bin/env node

//
// Show Geo information by IP
//
// Usage:
//   ip-geo [ip_addr]
//

const http = require('http');
const argv = require('yargs').argv;
const { cyan, gray } = require('chalk');
const open = require('open');

const host = argv._.pop();
const url = host ? `http://ip-api.com/json/${host}` : `http://ip-api.com/json`;

http.get(url, (res) => {
  res.on('data', async (chunk) => {
    try {
      const data = JSON.parse(chunk);
      if (data.status === "success") {
        const {
          query, 
          as, 
          city, 
          regionName, 
          country, 
          timezone, 
          lat, 
          lon, 
          isp, 
          org
        } = data;
        
        const location = [city, regionName, country].filter((e, i, arr) => arr.lastIndexOf(e) === i);

        console.log(gray(`      IP:`), cyan(query));
        console.log(gray(`      AS:`), as);
        console.log(gray(` Address:`), location.join(', '));
        console.log(gray(`Timezone:`), timezone);
        console.log(gray(`Location:`), `${lat}, ${lon}`);
        console.log(gray(` ISP/Org:`), `${isp}${(isp !== org ? ' / ' + org : '')}`);


        if (argv.m || argv.map) {
            await open(`https://www.google.com/maps/search/?api=1&query=${lat},${lon}`);
        }
      }
      else {
        console.error(data.message);
      }
    } catch (e) {
      console.error(e);
    }
  });
});
